#!/usr/bin/env python

# Author: Greg Alushin, alushing@mail.nih.gov

# This script will combine frealign half stack parameter files into a single parameter file for
# the full stack generated by alternating the half stacks, created by HalfStacksfromMulti.py.  This is useful for combining both
# half datasets into a single reconstruction and simultaneously calculating a gold standard FSC 
# with FREALIGN.  Note that the parameter files are assumed to be cleaned of "C" comment lines from FREALIGN.
# To accomplish this, use "grep -v C input.par > clean.par".  This script is called by refine_halves_helical.com,
# which generates clean parameter files automatically.

#
#import modules, this could probably stand to be pruned
#

# import system / house keeping modules
import os
import sys
import optparse
import linecache

#
#========================
def setupParserOptions():
	parser = optparse.OptionParser()
	parser.set_usage("%prog -a <params_half_a> -b <params_half_b>")
	parser.add_option("-a",dest="params_a",type="string",metavar="FILE",
		help="clean frealign parameter file a")
	parser.add_option("-b",dest="params_b",type="string",metavar="FILE",
		help="clean frealign parameter file b")

	options,args = parser.parse_args()

	if len(args) > 0:
		parser.error("Unknown commandline options: " +str(args))

	if len(sys.argv) < 2:
		parser.print_help()
		sys.exit()
	params={}
	for i in parser.option_list:
		if isinstance(i.dest,str):
			params[i.dest] = getattr(options,i.dest)
	return params
#======================
def getCount(half_a,half_b):

	f1=open(half_a,'r')
	f2=open(half_b,'r')

	f1_lines=f1.readlines()
	f2_lines=f2.readlines()

	f1.close()
	f2.close()
	
	length_a = len(f1_lines)
	length_b = len(f2_lines)

	f1_lines=None
	f2_lines=None

	return (length_a,length_b)
#=========================
def checkComments(f_name):
	a = linecache.getline(f_name,1)
	if a[0]=='C':
		print "Error: file %s contains FREALIGN comments, remove with grep before using this script"%f_name
		sys.exit()
#=========================
def checkExistence(f_name):
	if not os.path.exists(f_name):
		print "Error: file %s does not exist.  Exiting..."%f_name
		sys.exit()
#=========================
if __name__ == "__main__":
	params=setupParserOptions()

	params_a=params['params_a']
	params_b=params['params_b']

	checkExistence(params_a)
	checkExistence(params_b)

	checkComments(params_a)
	checkComments(params_b)

	a_length,b_length=getCount(params_a,params_b)
	
	half_count=1
	full_count=1
	

	if a_length != b_length:
		print "The two parameter files are different sizes, suggesting they were not generated with HalfStacksFromMulti.py.  Exiting..."
		sys.exit()

	output=open('temp_halves_combined.par','w')
	
	for i in xrange(a_length):

		a_line=linecache.getline(params_a,half_count)
		b_line=linecache.getline(params_b,half_count)
		half_count+=1

		output.write("%7i%s"%(full_count,a_line[7:]))
		full_count+=1
		output.write("%7i%s"%(full_count,b_line[7:]))
		full_count+=1

	output.close()		
		

